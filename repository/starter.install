<?php
/**
 * @file
 * Install, update and uninstall functions for the starter installation profile.
 */

/**
 * Implements hook_install().
 *
 * Performs actions to set up the site for this profile.
 *
 * @see system_install()
 */
function starter_install() {
  // Allow visitors to register.
  variable_set('user_register', USER_REGISTER_VISITORS);

  // Give access to the published content to everyone.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content'));
}

/**
 * Implements hook_install_tasks().
 */
function starter_install_tasks(&$install_state) {
  $tasks = array();

  $tasks['starter_install_theme'] = array(
    'display_name' => st('starter theme installation'),
    'display' => TRUE,
    'type' => 'normal',
    'run' => INSTALL_TASK_RUN_IF_NOT_COMPLETED,
    'function' => '_starter_install_theme',
  );

  $tasks['starter_install_locale'] = array(
    'display_name' => st('starter locale installation'),
    'display' => TRUE,
    'type' => 'batch',
    'run' => INSTALL_TASK_RUN_IF_NOT_COMPLETED,
    'function' => '_starter_install_locale',
  );

  $tasks['starter_install_variables'] = array(
    'display_name' => st('starter variables installation'),
    'display' => TRUE,
    'type' => 'normal',
    'run' => INSTALL_TASK_RUN_IF_NOT_COMPLETED,
    'function' => '_starter_install_variables',
  );

  $tasks['starter_install_user1'] = array(
    'display_name' => st('starter user1 installation'),
    'display' => TRUE,
    'type' => 'normal',
    'run' => INSTALL_TASK_RUN_IF_NOT_COMPLETED,
    'function' => '_starter_install_user1',
  );

  return $tasks;
}

/**
 * Enable default and admin themes and hide all but system/main blocks to let
 * context manage them.
 */
function _starter_install_theme() {
  $settings = _starter_get_settings();
  $theme_name = $settings['default_theme'];

  // Set default theme.
  theme_enable(array($theme_name));
  theme_disable(array('bartik', 'garland', 'seven', 'stark'));
  variable_set('theme_default', $theme_name);

  // Set admin theme.
  theme_enable(array('adminimal'));
  variable_set('admin_theme', 'adminimal');
  variable_set('node_admin_theme', TRUE);

  // Disable all blocks by default except system-main. Use context to enable them.
  db_update('block')
    ->fields(array('region' => -1))
    ->condition(
      db_or()
        ->condition('delta', 'main', '!=')
        ->condition('module', 'system', '!=')
    )
    ->execute();
}

/**
 * Enable french language and set it as default then disable other languages and
 * download french translations.
 */
function _starter_install_locale(&$install_state) {
  $settings = _starter_get_settings();

  $to_enable = $settings['languages'];
  $to_enable[] = $settings['default_language'];
  $to_enable = array_unique($to_enable);

  // Stop here if there is no language to enable (only english needed).
  if (count($to_enable) == 1 && current($to_enable) == 'en') {
    return;
  }

  // Add languages to enable.
  include_once DRUPAL_ROOT . '/includes/locale.inc';
  $langs = language_list();
  foreach ($to_enable as $lang) {
    if (empty($langs[$lang])) {
      locale_add_language($lang);
    }
    $langs = language_list();
  }

  // Enable languages and set it as default.
  db_update('languages')
    ->fields(array(
      'enabled' => '1',
    ))
    ->condition('language', $to_enable, 'IN')
    ->execute();
  variable_set('language_default', (object) $langs[$settings['default_language']]);

  // Disable all other languages.
  db_update('languages')
    ->fields(array(
      'enabled' => '0',
    ))
    ->condition('language', $to_enable, 'NOT IN')
    ->execute();

  // Reset languages static cache to avoid issues with l10n_update.
  drupal_static_reset('language_list');

  // Import local translations.
  $modules = module_list();
  starter_modules_enabled($modules);

  // Stop the script here if we don't want to download translations.
  if (empty($settings['download_translations'])) {
    return;
  }

  // Download translations by using the l10n_update module batch.
  module_enable(array('l10n_update'));
  module_load_include('inc', 'l10n_update', 'l10n_update.check');
  l10n_update_language_refresh($to_enable);
  $batch = batch_get();
  // Disable l10n_update at the end of the process for performance reasons.
  $batch['operations'][] = array('module_disable', array(array('l10n_update')));

  return $batch;
}

/**
 * Preset base configuration variables.
 */
function _starter_install_variables() {
  $settings = _starter_get_settings();

  variable_set('site_name',  $settings['site_name']);
  variable_set('site_slogan',  $settings['site_slogan']);
  variable_set('site_mail',  $settings['site_mail']);

  variable_set('site_default_country',$settings['default_country']);
  variable_set('date_default_timezone', $settings['default_timezone']);
  variable_set('clean_url', 1);

  variable_set('update_notify_emails', array($settings['site_mail']));
  module_disable(array('update'));
}

/**
 * Force user1 settings.
 */
function _starter_install_user1() {
  $settings = _starter_get_settings();
  $user1 = user_load(1);

  $edit = array();
  $edit['name'] = $settings['user1_name'];
  $edit['mail'] = $settings['site_mail'];
  $edit['pass'] = user_password(50); // Use drush to log in as user1.

  user_save($user1, $edit);
}

/**
 * Get settings from the profile's info file.
 *
 * @return array
 *   The settings array.
 */
function _starter_get_settings() {
  $settings = &drupal_static(__FUNCTION__, NULL);
  if (empty($settings)) {
    $data = drupal_parse_info_file(str_replace('.install', '.info', __FILE__));
    $settings = $data['settings'];
  }
  return $settings;
}
